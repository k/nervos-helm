apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "ckb.fullname" . }}
  labels:
    {{- include "ckb.labels" . | nindent 4 }}
spec:
  podManagementPolicy: "Parallel"
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "ckb.fullname" . }}
  selector:
    matchLabels:
      {{- include "ckb.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "ckb.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "ckb.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: true
      initContainers:
        - name: init-config
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - init
          {{- if eq .Values.chain "testnet" }}
          - --import-spec
          - /var/lib/configs/aggron.toml
          {{- end }}
          - --chain
          - {{ .Values.chain }}
          - --force
          volumeMounts:
          - name: chaindata
            mountPath: /var/lib/ckb
          - name: config
            mountPath: /var/lib/configs
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - run
          env:
          - name: CKB_CHAIN
            value: {{ .Values.chain }}
          ports:
            - name: rpc
              containerPort: 8114
              protocol: TCP
            - name: peer
              containerPort: 8115
              hostPort: 8115
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: chaindata
            mountPath: /var/lib/ckb
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      volumes:
      - name: config
        configMap:
          name: {{ include "ckb.fullname" . }}-config
  volumeClaimTemplates:
  - metadata:
      name: chaindata
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.storage }}
